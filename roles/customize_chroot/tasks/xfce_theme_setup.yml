
- name: Fix ownership of ubuntu user config files
  file:
    path: "{{ CHROOT_DIR }}/home/ubuntu/.config"
    owner: 1000
    group: 1000
    recurse: yes

- name: Copy default wallpaper into chroot for user-level usage
  copy:
    src: "{{ BUILD_BASE_PATH }}/cloudify-os-main/cloudify-wallpaper.png"
    dest: "{{ CHROOT_DIR }}/usr/share/backgrounds/xfce/cloudify-wallpaper.png"
  become: true

# ==== Theme =====

- name: Create destination directory for WhiteSur theme
  ansible.builtin.file:
    path: "{{ CHROOT_DIR }}/usr/share/themes/WhiteSur"
    state: directory
    mode: '0755'
    recurse: yes 

- name: Extract theme archive into chroot
  unarchive:
    src: "{{ BUILD_BASE_PATH }}/cloudify-os-main/themes/cloudi.tar.gz"
    dest: "{{ CHROOT_DIR }}/usr/share/themes/WhiteSur"

# === ICON THEMES ===
- name: Create destination directory for WhiteSur theme
  ansible.builtin.file:
    path: "{{ CHROOT_DIR }}/usr/share/icons/WhiteSur"
    state: directory
    mode: '0755'
    recurse: yes 

- name: Extract theme archive into chroot
  unarchive:
    src: "{{ BUILD_BASE_PATH }}/cloudify-os-main/icons/cloudi.tar.gz"
    dest: "{{ CHROOT_DIR }}/usr/share/icons/"

- name: Create config directory
  ansible.builtin.file:
    path: "{{ CHROOT_DIR }}/home/ubuntu/.config/xfce4/xfconf/xfce-perchannel-xml/"
    state: directory
    mode: '0755'
    recurse: yes 

## Desktop Settings ####
- name: Copy xsettings as default
  copy:
    src: "{{ BUILD_BASE_PATH }}/cloudify-os-main/config/xsettings.xml"
    dest: "{{ CHROOT_DIR }}/home/ubuntu/.config/xfce4/xfconf/xfce-perchannel-xml/xsettings.xml"
    force: true 
  become: true

- name: Copy desktop settings as default
  copy:
    src: "{{ BUILD_BASE_PATH }}/cloudify-os-main/config/xfce4-desktop.xml"
    dest: "{{ CHROOT_DIR }}/home/ubuntu/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-desktop.xml"
    force: true 
  become: true

## CONKY
- name: Install conky in chroot
  command: >
    chroot {{ CHROOT_DIR }} apt-get install -y conky-all
  become: true

- name: Create Conky config directory for user
  file:
    path: "{{ CHROOT_DIR }}/home/ubuntu/.config/conky"
    state: directory
    owner: 1000
    group: 1000
    mode: '0755'

- name: Copy custom Conky config
  copy:
    src: "{{ BUILD_BASE_PATH }}/cloudify-os-main/config/conky.conf"
    dest: "{{ CHROOT_DIR }}/home/ubuntu/.config/conky/conky.conf"
    owner: 1000
    group: 1000
    mode: '0644'

- name: Create XFCE autostart directory
  file:
    path: "{{ CHROOT_DIR }}/home/ubuntu/.config/autostart"
    state: directory
    owner: 1000
    group: 1000
    mode: '0755'

- name: Copy Conky autostart desktop entry
  copy:
    content: |
      [Desktop Entry]
      Type=Application
      Exec=conky -p 5
      Hidden=false
      NoDisplay=false
      X-GNOME-Autostart-enabled=true
      Name=Conky
      Comment=Start Conky system monitor
    dest: "{{ CHROOT_DIR }}/home/ubuntu/.config/autostart/conky.desktop"
    owner: 1000
    group: 1000
    mode: '0644'

#Tilix
- name: Install Tilix terminal emulator in chroot
  command: >
    chroot {{ CHROOT_DIR }} apt-get install -y tilix fonts-firacode
  become: true

- name: Set Tilix as the default terminal emulator
  copy:
    dest: "{{ CHROOT_DIR }}/home/ubuntu/.config/xfce4/helpers.rc"
    content: |
      TerminalEmulator=tilix
    owner: 1000
    group: 1000
    mode: '0644'

- name: Copy Tilix dconf config
  copy:
    src: "{{ BUILD_BASE_PATH }}/cloudify-os-main/config/tilix.dconf"
    dest: "{{ CHROOT_DIR }}/tmp/tilix.dconf"

# Bug we need a better mechanism to do this at startup.
#- name: Load Tilix config via dconf inside chroot
#  command: >
#    chroot {{ CHROOT_DIR }} bash -c 'dconf load /com/gexperts/Tilix/ < /tmp/tilix.dconf'

# Creates the custom menu
- name: Copy Cloudi XFCE menu zip into chroot
  copy:
    src: "{{ BUILD_BASE_PATH }}/cloudify-os-main/menus/cloudi-xfce-menu.zip"
    dest: "{{ CHROOT_DIR }}/tmp/cloudi-xfce-menu.zip"

- name: Unzip Cloudi XFCE menu configuration inside chroot
  command: chroot {{ CHROOT_DIR }} bash -c "unzip /tmp/cloudi-xfce-menu.zip -d / && rm /tmp/cloudi-xfce-menu.zip"
  args:
    creates: "{{ CHROOT_DIR }}/usr/share/applications/cloudi-zenboard.desktop"
  become: true

- name: Update desktop database inside chroot
  command: chroot {{ CHROOT_DIR }} update-desktop-database
  become: true
