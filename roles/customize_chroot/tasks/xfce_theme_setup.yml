
- name: Fix ownership of ubuntu user config files
  file:
    path: "{{ chroot_dir }}/home/ubuntu/.config"
    owner: 1000
    group: 1000
    recurse: yes

- name: Copy default wallpaper into chroot for user-level usage
  copy:
    src: "{{ lookup('env', 'PWD') }}/cloudify-os-main/cloudify-wallpaper.png"
    dest: "{{ chroot_dir }}/usr/share/backgrounds/xfce/cloudify-wallpaper.png"
  become: true

# ==== Theme =====
- name: Find all .tar.xz theme files
  find:
    paths: "{{ lookup('env', 'PWD') }}/cloudify-os-main/themes"
    patterns: "*.tar.xz"
  register: theme_archives

- name: Ensure /usr/share/themes exists inside chroot
  file:
    path: "{{ chroot_dir }}/usr/share/themes"
    state: directory
    mode: '0755'

- name: Ensure each theme subdirectory exists inside chroot before extracting
  file:
    path: "{{ chroot_dir }}/usr/share/themes/{{ item.path | basename | regex_replace('\\.tar\\.xz$', '') }}"
    state: directory
    mode: '0755'
  loop: "{{ theme_archives.files }}"

- name: Extract all themes into chroot /usr/share/themes/
  unarchive:
    src: "{{ item.path }}"
    dest: "{{ chroot_dir }}/usr/share/themes/{{ item.path | basename | regex_replace('\\.tar\\.xz$', '') }}"
    remote_src: no
  loop: "{{ theme_archives.files }}"

# === ICON THEMES ===

- name: Find all .tar.xz icon theme files
  find:
    paths: "{{ lookup('env', 'PWD') }}/cloudify-os-main/icons/"
    patterns: "*.tar.xz"
  register: icon_theme_archives

- name: Ensure /usr/share/icons exists inside chroot
  file:
    path: "{{ chroot_dir }}/usr/share/icons"
    state: directory
    mode: '0755'

- name: Ensure each icon subdirectory exists inside chroot before extracting
  file:
    path: "{{ chroot_dir }}/usr/share/icons/{{ item.path | basename | regex_replace('\\.tar\\.xz$', '') }}"
    state: directory
    mode: '0755'
  loop: "{{ icon_theme_archives.files }}"

- name: Extract all icon themes into chroot /usr/share/icons/
  unarchive:
    src: "{{ item.path }}"
    dest: "{{ chroot_dir }}/usr/share/icons/{{ item.path | basename | regex_replace('\\.tar\\.xz$', '') }}"
    remote_src: no
  loop: "{{ icon_theme_archives.files }}"
